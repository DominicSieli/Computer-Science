Functions
- Size()           O(1)
- Push(T)          O(1)
- T Pop()          O(1)
- T Peek()         O(1)
- bool Empty()     O(1)
- bool Contains()  O(n)

A stack has a LIFO (last in first out) access pattern.
The preferable implementation of a stack is a dynamically allocated linked list.
A stack is represented by an linked list with at least one node.
The first index is null while the second index contains the first element.
Only the top element of a stack can be popped.
New elements are only pushed to the top of the stack.
Stacks are central to Depth-First search algorithms.